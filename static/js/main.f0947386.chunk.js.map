{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setIsStarted","isReversed","setIsReversed","NONE","sortType","setSortType","reversedGoods","goods","visibleGoods","ALPHABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","cn","onClick","value","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,oEAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgCE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAYMC,EAzCR,SACEC,EACAH,EACAH,GAEA,IAAMO,EAAY,YAAOD,GAczB,OAZIH,IAAaT,EAASc,UACxBD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAOD,EAAME,cAAcD,MAI3BR,IAAaT,EAASmB,QACxBN,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAOD,EAAMI,OAASH,EAAMG,UAI5Bd,EACKO,EAAaQ,UAGfR,EAkBeS,CACpBrB,EACAQ,EACAH,GAGF,OACE,qBAAKiB,UAAU,MAAf,SACInB,EAWE,sBAAKmB,UAAU,wCAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,aACA,CAAE,aAAchB,IAAaT,EAASc,WAExCY,QApCO,kBAAOhB,EAAYV,EAASc,WA8BrC,iCAWA,wBACEU,KAAK,SACLD,UAAWE,IACT,aACA,CAAE,aAAchB,IAAaT,EAASmB,SAExCO,QA9CK,kBAAOhB,EAAYV,EAASmB,SAwCnC,4BAUA,wBACEK,KAAK,SACLE,QAnDE,kBAAOnB,GAAc,SAAAoB,GAAK,OAAKA,MAoDjCJ,UAAWE,IACT,cACA,CAAE,cAA6B,IAAfnB,IALpB,qBAWA,wBACEkB,KAAK,SACLE,QA7DA,WACZrB,GAAa,GACbE,GAAc,GACdG,EAAYV,EAASQ,OA2DTe,UAAWE,IACT,qBACA,CACE,aAAchB,IAAaT,EAASQ,OACpB,IAAfF,IAPP,sBAcF,oBAAIiB,UAAU,aAAd,SACGZ,EAAciB,KAAI,SAAAC,GACjB,OACE,oBACEN,UAAU,mBADZ,SAIGM,GAFIA,WA9Df,wBACEL,KAAK,SACLD,UAAU,4CACVG,QAvBQ,kBAAOrB,GAAa,IAoB9B,sBCxEVyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f0947386.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((good1, good2) => {\n      return good1.localeCompare(good2);\n    });\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((good1, good2) => {\n      return good1.length - good2.length;\n    });\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const startWork = () => (setIsStarted(true));\n  const sortAlphabet = () => (setSortType(SortType.ALPHABET));\n  const sortLength = () => (setSortType(SortType.LENGTH));\n  const reverse = () => (setIsReversed(value => !value));\n  const reset = () => {\n    setIsStarted(false);\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const reversedGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  return (\n    <div className=\"App\">\n      {!isStarted\n        ? (\n          <button\n            type=\"button\"\n            className=\"button is-link is-outlined is-large start\"\n            onClick={startWork}\n          >\n            Start\n          </button>\n        )\n        : (\n          <div className=\"box has-background-link-light contant\">\n            <div className=\"buttons\">\n              <button\n                type=\"button\"\n                className={cn(\n                  'button btn',\n                  { 'is-warning': sortType === SortType.ALPHABET },\n                )}\n                onClick={sortAlphabet}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                className={cn(\n                  'button btn',\n                  { 'is-warning': sortType === SortType.LENGTH },\n                )}\n                onClick={sortLength}\n              >\n                Sort by length\n              </button>\n              <button\n                type=\"button\"\n                onClick={reverse}\n                className={cn(\n                  'button  btn',\n                  { 'is-warning': isReversed === true },\n                )}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={reset}\n                className={cn(\n                  'button is-info btn',\n                  {\n                    'is-warning': sortType === SortType.NONE\n                  && isReversed === false,\n                  },\n                )}\n              >\n                Reset\n              </button>\n            </div>\n            <ul className=\"listRender\">\n              {reversedGoods.map(good => {\n                return (\n                  <li\n                    className=\"listRender__item\"\n                    key={good}\n                  >\n                    {good}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}